# This workflow will install Python dependencies, run tests, and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches:
      - "main"
  pull_request:
    branches:
      - "main"

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v4

      # Set environment variable to reduce TensorFlow warnings
      - name: Set environment variable
        run: echo "TF_CPP_MIN_LOG_LEVEL=2" >> $GITHUB_ENV

      # Set up Python environment
      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"

      # Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      # Install TensorRT libraries (optional, if needed)
      - name: Install TensorRT libraries
        run: sudo apt-get install -y libnvinfer7 libnvinfer-plugin7

      # Debug: List files in the current directory
      - name: Debug file access
        run: |
          echo "Listing files in the directory..."
          ls -l

      # Download model file
      - name: Download model file
        run: |
          wget -O catAndDog_BinaryClassifier.keras <model-file-url>

      # Add sample test images
      - name: Add sample test images
        run: |
          mkdir -p test_set/cats test_set/dogs
          wget -O test_set/cats/sample_cat.jpg <cat-image-url>
          wget -O test_set/dogs/sample_dog.jpg <dog-image-url>

      # Lint code with flake8
      - name: Lint with flake8
        run: |
          # Stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # Exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      # Run tests with pytest
      - name: Test with pytest
        env:
          PYTHONPATH: ${{ github.workspace }}
        run: |
          pytest